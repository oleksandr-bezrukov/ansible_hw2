---
    - name: Install nodejs
      apt:
        name: ['npm=3.5.2-0ubuntu4']
        state: present
        update_cache: yes
      become: yes

    - name: create user node-red
      become: yes
      user:
        name: node-red
        shell: /bin/bash
        home: "{{DATA}}"

    - name: Install pm2
      become: yes
      npm: name=pm2 global=yes production=yes

    - name: Install node-red
      npm: name=node-red global=yes production=yes
      become: yes

    - name: Install node-red-contrib-re-postgres
      npm: name=node-red-contrib-re-postgres global=yes production=yes
      become: yes
      
    - name: Install postgres client
      apt:
        name: ['postgresql-client-10=10.17-0ubuntu0.18.04.1']
        state: present
        update_cache: yes
      become: yes

    - name: Check init run
      stat:
        path: "{{DATA}}/settings.js"
      register: not_init_run
      become: yes

    - name: load credential secret
      include_vars:
        file: encrypted_supersecretkey.yml

    - name: copy the web app config file settings.js
      template: src=settings.js dest={{DATA}} #owner=nginx group=nginx
      become: yes
      become_user: node-red

    - name: copy the web app config file flows.json
      template: src=flows.json dest={{DATA}} #owner=nginx group=nginx
      become: yes
      become_user: node-red

    - name: copy the web app config file flows_cred.json
      copy: src=flows_cred.json dest={{DATA}} #owner=nginx group=nginx
      become: yes
      become_user: node-red
      
    - name: load pg password
      include_vars:
        file: ../db/encrypted_pg_password.yml
      
    - name: Check postgresql connection
      shell: "psql \"postgresql://puser:{{encrypted_pg_password}}@{{hostvars.postgresql.ansible_host}}:8080/postgres\" -q -c \"\\l\""
      register: postgresql_connection
      become: yes
      
    - name: Check if pm2 already has been started
      shell: "pm2 ping"
      register: pm2_started
      become: yes
      become_user: node-red

    - name: Check postgresql connection
      shell: "psql \"postgresql://puser:{{encrypted_pg_password}}@{{hostvars.postgresql.ansible_host}}:8080/postgres\" -q -c \"\\l\""
      register: postgresql_connection
      become: yes

    - name: init run
      shell: " pm2 delete all || : && pm2 start node-red -- --userDir /data --port 8080"
#      shell: "pm2 start node-red -- --userDir {{DATA}} --port 8080"
#      when: not not_init_run.stat.exists 
      when: postgresql_connection.rc == 0
      become: yes
      become_user: node-red

#    - name: init run
#      shell: "pm2 start node-red -- --userDir {{DATA}} --port 8080"
#     when: pm2_started.rc == 0
#      become: yes
#      become_user: node-red

#    - name: rerun web application if not init run
#      shell: "pm2 restart node-red -- --userDir {{DATA}} --port 8080"
#      when: not_init_run.stat.exists 
#      become: yes
#      become_user: node-red
